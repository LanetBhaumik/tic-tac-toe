{"version":3,"sources":["components/boxSlice.js","components/Box.js","components/BoxRow.js","components/Reset.js","App.js","app/store.js","reportWebVitals.js","index.js","components/box.module.css"],"names":["initialState","turn","status","zero","cross","boxObj","11","con","dis","12","13","21","22","23","31","32","33","turnSlice","createSlice","name","reducers","setBoxObj","state","action","id","payload","reset","Object","keys","forEach","key","toggleTurn","concat","checkWinner","troi","zeroWin","every","el","includes","crossWin","length","actions","Box","props","useSelector","dispatch","useDispatch","className","classes","box","type","disabled","boxId","value","onClick","e","console","log","BoxRow","content","i","push","rowId","Reset","style","backgroundColor","fontSize","color","borderRadius","border","height","width","App","background","store","configureStore","reducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.357e39b4.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  turn: \"O\",\n  status: \"O's Turn\",\n  zero: [],\n  cross: [],\n  boxObj: {\n    11: {\n      con: \"\",\n      dis: false,\n    },\n    12: {\n      con: \"\",\n      dis: false,\n    },\n    13: {\n      con: \"\",\n      dis: false,\n    },\n    21: {\n      con: \"\",\n      dis: false,\n    },\n    22: {\n      con: \"\",\n      dis: false,\n    },\n    23: {\n      con: \"\",\n      dis: false,\n    },\n    31: {\n      con: \"\",\n      dis: false,\n    },\n    32: {\n      con: \"\",\n      dis: false,\n    },\n    33: {\n      con: \"\",\n      dis: false,\n    },\n  },\n};\n\nexport const turnSlice = createSlice({\n  name: \"turn\",\n  initialState,\n  reducers: {\n    setBoxObj: (state, action) => {\n      const id = action.payload;\n      state.boxObj[id].con = state.turn;\n      state.boxObj[id].dis = true;\n    },\n    reset: (state) => {\n      const keys = Object.keys(initialState);\n      keys.forEach((key) => {\n        state[key] = initialState[key];\n      });\n    },\n    toggleTurn: (state, action) => {\n      if (state.status === \"O's Turn\") {\n        state.status = \"X's Turn\";\n      } else {\n        state.status = \"O's Turn\";\n      }\n      if (state.turn === \"O\") {\n        state.zero = state.zero.concat(action.payload);\n      }\n      if (state.turn === \"X\") {\n        state.cross = state.cross.concat(action.payload);\n      }\n      state.turn = state.turn === \"O\" ? \"X\" : \"O\";\n    },\n\n    checkWinner: (state) => {\n      const winner = [\n        [\"11\", \"12\", \"13\"],\n        [\"21\", \"22\", \"23\"],\n        [\"31\", \"32\", \"33\"],\n        [\"11\", \"21\", \"31\"],\n        [\"21\", \"22\", \"23\"],\n        [\"31\", \"32\", \"33\"],\n        [\"11\", \"22\", \"33\"],\n        [\"13\", \"22\", \"31\"],\n      ];\n      winner.forEach((troi) => {\n        const zeroWin = troi.every((el) => {\n          return state.zero.includes(el);\n        });\n        const crossWin = troi.every((el) => {\n          return state.cross.includes(el);\n        });\n        if (zeroWin) {\n          state.status = \"Zero wins the Game.\";\n          const keys = Object.keys(state.boxObj);\n          keys.forEach((key) => {\n            state.boxObj[key].dis = true;\n          });\n          return;\n        } else if (crossWin) {\n          state.status = \"Cross wins the Game.\";\n          const keys = Object.keys(state.boxObj);\n          keys.forEach((key) => {\n            state.boxObj[key].dis = true;\n          });\n          return;\n        }\n      });\n      if (\n        state.status !== \"Zero wins the Game.\" &&\n        state.status !== \"Zero wins the Game.\" &&\n        state.zero.length === 5\n      ) {\n        state.status = \"Draw\";\n        return;\n      }\n    },\n  },\n});\n\nexport const { toggleTurn, checkWinner, reset, setBoxObj } = turnSlice.actions;\n\nexport default turnSlice.reducer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleTurn, checkWinner, setBoxObj } from \"../components/boxSlice\";\n\nimport classes from \"./box.module.css\";\n\nconst Box = (props) => {\n  const { boxObj } = useSelector((state) => state.turn);\n  const dispatch = useDispatch();\n\n  const handleClick = (e) => {\n    console.log(\"Button clicked!!!\");\n    dispatch(setBoxObj(props.boxId));\n    dispatch(toggleTurn(props.boxId));\n    dispatch(checkWinner());\n  };\n\n  return (\n    <td>\n      <input\n        className={classes.box}\n        type=\"button\"\n        disabled={boxObj[props.boxId].dis}\n        value={boxObj[props.boxId].con}\n        onClick={(e) => {\n          handleClick(e);\n        }}\n      />\n    </td>\n  );\n};\n\nexport default Box;\n","import React from \"react\";\nimport Box from \"./Box\";\n\nconst BoxRow = (props) => {\n  const content = [];\n  for (let i = 1; i <= 3; i++) {\n    content.push(<Box key={i} boxId={props.rowId + i} />);\n  }\n  return (\n    <>\n      <tr>{content}</tr>\n    </>\n  );\n};\n\nexport default BoxRow;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { reset } from \"../components/boxSlice\";\n\nconst Reset = () => {\n  const dispatch = useDispatch();\n  const hadleReset = () => {\n    dispatch(reset());\n  };\n  return (\n    <center>\n      <button\n        style={{\n          backgroundColor: \"deepskyblue\",\n          fontSize: \"xx-large\",\n          color: \"aliceblue\",\n          borderRadius: \"12px\",\n          border: \"solid\",\n          height: \"75px\",\n          width: \"300px\",\n        }}\n        onClick={hadleReset}\n      >\n        Reset\n      </button>\n    </center>\n  );\n};\n\nexport default Reset;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./App.css\";\nimport BoxRow from \"./components/BoxRow\";\nimport Reset from \"./components/Reset\";\n\n// import { TurnContext } from \"./store/turn-context\";\nconst App = () => {\n  return (\n    <div className=\"containter\">\n      <h1\n        className=\"h1\"\n        style={{\n          color: \"deepskyblue\",\n        }}\n      >\n        TIC-TAC-TOE\n      </h1>\n      <p\n        style={{\n          color: \"white\",\n          fontSize: \"30px\",\n          background: \"deepskyblue\",\n        }}\n      >\n        {useSelector((state) => state.turn.status)}{\" \"}\n      </p>\n      <table className=\"table\">\n        <tbody>\n          <BoxRow rowId=\"1\" />\n          <BoxRow rowId=\"2\" />\n          <BoxRow rowId=\"3\" />\n        </tbody>\n      </table>\n      <Reset />\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport turnSlice from \"../components/boxSlice\";\n\nconst store = configureStore({\n  reducer: {\n    turn: turnSlice,\n  },\n});\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport store from \"../src/app/store\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// import TurnContextProvider from \"./store/turn-context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"box_box__3HGv0\"};"],"sourceRoot":""}